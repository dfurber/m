Real Software Engineering

as currently taught doesn't contain cost or produce high quality software

real engineering - real software - caricature engineering

1. software system best designed if testing is interlaced with designing rather than after the fact
2. simulations of requirements help define the model (cucumber/acceptance testing)
3. repetition of testing and design the model becomes the software

cost of error directly related to distance of time from decision made that caused the error (feedback loop)

empirical process control model
real engineering is about the process of developing new things, design, experimentation, blind alleys
esp chemical, electrical

cost is always an object

Engineering is not the art of constructing. It is rather the art of not constructing: or, it is the art of doing well with one dollar what any bungler can do wiht two.
Arthur Mellen Wellington

Advances often come from practitioners and are later formalized by academics

Bridges and buildings: engineers build models before they build the real thing
A bridge model doesn't describe what a bridge would look like. It is a real miniature bridge.

Mathematical modeling was introduced as a cost saving measure because you can't build and test real prototypes all the time

Software engineering is the science and art of designing and making, with economy and elegance, systems so that they can readily adapt to the changes that will be required of them.

Structural engineering "preloads" the design and math at the expense of prototyping because the processing and requirements are well understood and have small variance.

Jack Reeves, What is Software Design? C++ Journal

Unlike structural engineering, for us the building process is free. That's the compiler's job. Esp with Rails and PHP.
programmer as engineer and designer, not just "coder/builder"
esp if the model/prototype ultimately becomes the finished product


Don't Repeat Yourself, Repeat Others
John Nunemaker

What we have to learn to do, we learn by doing. - Aristotle
Reinventing the wheel is as important to a developer's education and skill as weightlifting is to a body builder.

autoload: lazy loads classes a la Yii
class Person; end

autoload :Person, 'path/to/person'
person = Person.new

Books to buy:
Metaprogramming in Ruby
Ruby Design Patterns
Refactoring: Ruby Edition
Clean Code

def eql?(other);end
alias :== :eql?

clone only clones the object you are cloning, but not the objects that are part of the object


Inheriting Code
Anthony Eden

you have to be an explorer, historian, forensic analyst, psychic, sadist, masochist

Prepare
assume nothing
you're not smarter, just different

Learn
read

Cause and Effect - what were the business needs that caused the code to be developed, find the dragons

Domain Rails Redux

class User < AR::Base
end

module Willcall
  class User < ::User
    default_scope :sorted_by_name
  end
end


MongoDB Data As Documents

concept of metamorphosis: change in form from one state/stage to another

Sarah Mei:
mysql + memcache for frontend cache + resque for background tasks


Redis and Resque
unicorn - replacement for mongrel


Bob Martin
it all comes back to sequence, selection, and iteration
a bit overexcited, i'd say

don't test the business rules through the UI (webrat)
and don't test the business rules when you test the UI


Implementing User Recommendations
don't even think of sql recursion!
100 users is fast, 1000 users semi-fast, 10000 unacceptable
RGL - in memory graph database, for small datasets
Neo4j.rb - but forces your entire application to run on JRuby
Neo4jr-social - solr of Neo4j neo4jr-social
use integer dates for edge metadata
"NoSQL" means "Not Only SQL"

connect user to question
metadata: views count, rated viewpoint, score


Breaking up a Monolithic Rails App
each application runs completely independently as a subdirectory of the main url, running unicorn_rails, nginx as reverse proxy
common css and js framework
page that describes css stylesheet
search_form_for(model, options that define fields to include and type of controls to represent them)
table_for(models) do |table|
  add_col :column, "Name", :sortable => true
end
common asset server
custom ajax_load helper to fill in divs from urls

How to share data?
"read only" database connection
services
ajax-loaded view segments
CoreService model that has the configuration information

each app has an initializer that updates the core service table with its current information